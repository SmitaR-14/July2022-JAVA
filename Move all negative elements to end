Given an unsorted array arr[] of size N having both negative and positive integers. 
The task is place all negative element at the end of array without changing the order of positive element and negative element. 

Example 1:

Input : 
N = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output : 
1  3  2  11  6  -1  -7  -5

pgm

import java.util.*;
import java.io.*;
 
class Main {   
    
    static void segregateElements(int arr[], int n)
    {                 
        int temp[] = new int[n];       
        int j = 0;          
        for (int i = 0; i < n; i++)
            if (arr[i] >= 0)
                temp[j++] = arr[i];        
        if (j == n || j == 0)
            return;        
        for (int i = 0; i < n; i++)
            if (arr[i] < 0)
                temp[j++] = arr[i];
        for (int i = 0; i < n; i++)
            arr[i] = temp[i];
    }
     
    
    public static void main(String arg[])
    {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt();
        int arr[] = new int [n];
        for (int i = 0; i < n; i++){
            arr[i] =sc.nextInt();
        } 
        segregateElements(arr, n); 
        for (int i = 0; i < n; i++)
            System.out.print(arr[i] + " ");
    }
}

Time complexity - O(n) - Space complexity
